version: '3.8'
services:
    db:
      container_name: postgresql
      image: postgres
      environment:
        POSTGRES_PASSWORD: "${PGPASSWORD:-root}"
        POSTGRES_USER: "${PGUSER:-postgres}"
        POSTGRES_DB: "${PGDATABASE:-postgres}"
      ports:
        - "${PGPORT:-5432}:5432"
      volumes:
        - "${PGDATA:-./pgdata}:/var/lib/postgresql/data"
      networks:
        - apinet
    
    rabbitmq:
      container_name: rabbitmq
      image: rabbitmq:3.9.11-management-alpine
      environment:
        RABBITMQ_DEFAULT_USER: "${RABBITMQ_DEFAULT_USER:-guest}"
        RABBITMQ_DEFAULT_PASS: "${RABBITMQ_DEFAULT_PASS:-guest}"
        RABBITMQ_DEFAULT_VHOST: "${RABBITMQ_DEFAULT_VHOST:-/}"
      ports:
        - "${RABBITMQ_PORT:-5672}:5672"
        - "${RABBITMQ_UIPORT:-15672}:15672"
      volumes:
        - "${RABBITMQ_DATA:-./rabbitmqdata}:/var/lib/rabbitmq"
      networks:
        - apinet

    redis:
      container_name: redis
      image: redis:6.2.6-alpine3.15
      environment:
        REDIS_PASSWORD: "${REDIS_PASSWORD:-root}"
      ports:
        - "${REDIS_PORT:-6379}:6379"
      volumes:
        - "${REDIS_DATA:-./redisdata}:/data"
      networks:
        - apinet
    mailhog:
      image: mailhog/mailhog:latest
      ports:
        - "{$MAILHOG_SMTP_PORT:-1025}:1025"
        - "{$MAILHOG_WEB_PORT:-8025}:8025"
    app:
      build:
        context: ./open_music_api
      container_name: app
      volumes:
        - "${APP_DATA:-./open_music_api}:/usr/src/app"
      ports:
        - "${APP_PORT:-5000}:3000"
      depends_on:
        - db
      command: npm run start-dev
      networks:
        - apinet

    notification_app:
      build:
        context: ./notification_app
      container_name: notification_app
      volumes:
        - "${NOTIF_APP_DATA:-./notification_app}:/usr/src/app"
      ports:
        - "${NOTIF_APP_PORT:-5001}:3000"
      depends_on:
        - db
      command: npm run start-dev
      networks:
        - apinet

networks:
  apinet:
    driver: bridge
